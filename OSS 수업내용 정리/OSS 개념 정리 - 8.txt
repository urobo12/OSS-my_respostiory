<임시저장 stash>
깃 3 영역 + stash 영역

깃 영역의 가장 단순한 형태 Nothing to commit, working tree is clean
저장소 .git폴더(stageing area, git local repository와 작업 디렉토리영역이 같은 상태인 것을 말한다.

stash - 놓다. 감추다, 남겨두다, 안전한 곳에 두다. (사전적 의미)

커밋할 필요 없이 파일의 변경 사항을 숨기거나 비밀리에 저장할 수 있는 강력한 도구

-작업 디렉토리와 스테이징 영역의 원래의 내용을 stash 스택에 저장
-작업 디렉토리와 스테이징 영역의 값을 깃 저장소의 마지막 커밋 내용으로 복사

따로 안전한 곳에 저장했다가 다시 가져올 수 있는 기능
- 작업 디렉토리와 스테이징 영역의 내요응ㄹ 저장

가장 늦게 넣은 것이 맨 처음에 나온다. (Last In - First Out)
Push로 넣고 POP로 가져온다.

브랜치 이동 또는 이전 커밋으로 이동하려면 커밋이 없고, 작업 트리가 깨끗해야한다. (git switch bname, git checkout HEAD~)
- 이때 필요

작업 디렉토리 스태이징 영역의 내용을 stash에 저장되고 작업 디렉토리 내용과 스테이징 영역의 내용이 최신 커밋 자료에로 남음

git stash  <- 저장 
git stash -m '메세지' <-
git stash save  <- save 안쓰는 것과 같음
git stash save '메세지'  <- save 뒤에는 메세지를 바로 쓸 수 있음

--keep-index, -k  <- 스테이징 영역은 제외하고 작업 폴더만 저장

--include-untracked  <- Untracked 파일도 포함해 저장

git stash apply  <- 기본으로 작업 디렉토리 내용만 다시 복사해 활용
git stash apply --index  <- 스테이지 영역도 함께 복사하기 위해서는 옵션도 사용

git stash [ -p | -patch ]  <- 변경된 모든 사항들을 저장하는 것이 아니며 대화형 프롬프트를 통해 자신이 stash에 저장할 파일과 저장하지 않을 파일을 동시에 지정가능
 
git stash list  <- 목록 보기 (가장 최근 stash부터 보여줌)
 해당 stash 항목이 생성되었을 때의 커밋 자료와 최신 stash 항목 간의 차이로 표시


해당 stash 항목이 생성되었을 때 커밋 자료와 해당 stash 항목 간의 차이로 표시
git stash show stash@{n}
git stash show stash@{n} -p  <- 더 자세히 보여줌

임시 저장된 stash 반영

git stash pop  <- 최근 지정된 임시저장소 내용을 가져와 반영하고 삭제
git stash pop stash@{n}  <- 최근 지정된 임시저장소 내용을 가져와 반영하고 삭제 (중간에 있는 목록을 빼오고 싶을 때 지정, 디폴트는 최근 것을 빼옴)

git stash apply  <- 최근 또는 지정된 임시저장소 내용을 가져와 반영, 작업 디렉토리만 반영, stash 목록은 그대로
git stash apply stash@{n}  <- 최근 또는 지정된 임시저장소 내용을 가져와 반영, 작업 디렉토리만 반영, stash 목록은 그대로 (중간에 있는 목록을 빼오고 싶을 때 지정)

git stash spply --index  <- 최근 또는 지정된 임시저장소 내용을 가져와 반영, 작업 디렉토리와 스테이징 영역도 반영, stash 목록은 그대로
git stash apply --index stash@{n}


특정 stash 삭제와 모든 stash 삭제

git stash drop  <- 최근 임시저장 내용을 삭제
git stash drop stash@{n}  <- 지정된 임시저장 내용을 삭제
git stash clear  <- 모든 stash 목록을 모두 제거

Untracked 파일 삭재 
git clean  <- 모든 untracked파일 삭제
git clean -f  <- 무조건 삭제
git clean -i  <- 지정하여 삭제



