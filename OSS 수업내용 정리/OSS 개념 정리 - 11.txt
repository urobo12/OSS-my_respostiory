< 버전 되돌리기 reset >
이동되는 해당 커밋 이후의 이력은 모두 사라지므로 주의가 필요
 새로운 커밋이 생성되지 않음

깃 저장소는 이전 커밋 내용으로 수정
 다만 reset 이전에 있던 작업 폴더와 스테이징 영역을 내용을 어떻게 유지할지가 관건
  옵션으로 처리

reset 옵션 --hard, --mixed, --soft
무조건 깃 저장소에는 복사
작업 폴더와 스테이징 영역의 내용은 옵션으로 처리

git reset --hard HEAD~  <- 이동되는 커밋의 내용으로 작업 폴더와 스테이지 영역, 깃 저장소 "모두 복사" 
git reset --hard  [commit_ID]  <- 이동되는 커밋의 내용으로 작업 폴더와 스테이지 영역, 깃 저장소 모두 복사

git reset HEAD~  <- 이동되는 커밋의 내용으로 "스테이지 영역과 깃 저장소 두 부분에 복사", 작업 폴더는 이전 내용 그대로 남음
git reset [commit_ID]  <- 이동되는 커밋의 내용으로 "스테이지 영역과 깃 저장소 두 부분에 복사", 작업 폴더는 이전 내용 그대로 남음
git reset --mixed HEAD~  <- 이동되는 커밋의 내용으로 스테이지 영역과 깃 저장소 두 부분에 복사, 작업 폴더는 이전 내용 그대로 남음
git reset --mixed [commit_ID]  <- 이동되는 커밋의 내용으로 스테이지 영역과 깃 저장소 두 부분에 복사, 작업 폴더는 이전 내용 그대로 남음

git reset --soft HEAD~  <- 이동되는 커밋의 내용으로 "깃 저장소에만 복사", 스테이지 영역과 작업 폴더는 이전 내용 그대로 남음
git reset --soft [commit_ID] <- 이동되는 커밋의 내용으로 깃 저장소에만 복사, 스테이지 영역과 작업 폴더는 이전 내용 그대로 남음

--mixed는 기본 옵션으로 git reset만 써도 된다.

--soft 
 돌아가려 했던 이력으로 되돌아 갔지만 해당 내용의 인덱스(또는 스테이지도) 이전 그대로  <- 바로 다시 커밋할 수 있는 상태로 남아있는 것

 다시 HEAD로 돌아가려면 <- commit 만 필요

--mixed 
 역시 이력은 되돌려지고, 인덱스도 되돌아가는 커밋의 내용으로 초기화
 다시 마지막 이전 head로 돌아가려면 <- add, commit 필요

--hard 
 돌아가려는 이력 이후의 모든 내용을 삭제
 다시 마지막 이전 head 로 돌아가려면 <- 파일 수정, add, commit 필요


git reset --hard ORIG_HEAD  <- 다시 원래 상테로 복원

git stash apply --index 사용 <- git stash로 임시로 저장해 놓았던 임시저장을 스테이징 영역까지 불러오기 위해 --index 사용

< 커밋 취소 revert >
undo 와 비슷한 기능
지정한 특정 커밋을 취소해 바로 이전 상태로 되돌리는 방법'
reset과 다르게 커밋할 것이 없고, 작업 영역이 깨끗해야 수행 가능
 nothing to commit.working tree clean
 커밋해온 모든 변경 사항들을 rollback
 이전의 커밋 히스토리는 그대로 유지, 되돌리는 새로운 커밋이 그 이후에 추가

HEAD~과 같이 HEAD 이전을 취소하면 충돌이 발생할 수 있음
충돌이 발생하지 않으려면
 바로 이전 취소를 여러 번 계속
 마치 워드 프로세서에서 취소 [ctrl + z]를 여러 번하는 것과 비슷

옵션 --no-edit
 추가되는 커밋 메시지가 자동으로 'Revert "이전 커밋 메시지"'으로 지정

git revert HEAD~  <- 이동되는 커밋의 내용으로 작업 폴더와 스테이지 영역, 짓 저장소를 모두 복사하고 커밋 메시지를 수정하도록 편집기가 실행
git revert [commit_ID] <- 이동되는 커밋의 내용으로 작업 폴더와 스테이지 영역, 짓 저장소를 모두 복사하고 커밋 메시지를 수정하도록 편집기가 실행

git revert HEAD~ --no-edit  <- 옵션 --no-edit으로 편집기 실행 없이 커밋 메시지가 자동으로 'Revert "이전 커밋 메시지"'으로 지정되어 새로운 커밋 생성
git revert [commit_ID] --no-edit  <- 옵션 --no-edit으로 편집기 실행 없이 커밋 메시지가 자동으로 'Revert "이전 커밋 메시지"'으로 지정되어 새로운 커밋 생성


커밋할 것이 있고 작업 영역이 깨끗하지 않으면 오류
 해결 방법
o 커밋하고 다시 revert 하는 방법 - 현재 커밋 내용으로 작업 폴더와 스테이지 영역, 깃 저장소 모두 복사 < 수정한 내용이 모두 사라짐
o git reset --hard HEAD~ - 이전 커밋 내용으로 작업 폴더와 스테이지 영역, 깃 저장소를 모두 수정.복사 < 수정한 내용이 사라지고, 현재 커밋 로그도 사라짐


기존의 커밋이 삭제되는 것이 아닌 새로운 커밋을 만든다. 

reset 과 revert
reset  - 이전 커밋 상태로 이동, 새로운 커밋 없음, 이전 커밋 이력 삭제됨, clean 상관없음, 충돌발생 없음, 충돌해결 - 
revert - 이전 커밋을 취소해 그 전 상태로 이동, 새로운 커밋 있음, 이전 커밋 이력 유지됨, clean 상관있음, 충돌발생 있음, 충돌해결 add 후 commit 또는 --continue 



